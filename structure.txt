Abstract
Keywords chosen by the authors
ACM keywords classification


Introduction
	- Context
	- Talk about continous integration
	- Problem: the repetitive work of writing tests scripts for different versions of the same system
	- Proposal: approach of automatically generate tests scripts for all version from an abstract description
	- Paragraph explaining next sections 

Related Work
	- Software Testing
	- Test Automation (Generation, Execution and Analysis)
	- UI testing
	- Tools (Selenium, Selendroid)

Case Study
	- It is a Smart Home Energy Management System
	- We developed 4 versions (3 webs and 1 mobile)
	- List of features
	- Screenshots of 2 version to compare.
	- What we want to test (test purpose)

Approach: generating test scripts for UI testing from abstract descriptions
	Principles
		- Tobias and Combinatorial Testing
		- The tests scripts for the case study using Tobias
	Mise en ouvre (Implementation of the Principles - Principles put into Practice)
		- Show what we did (for each functionality? detailed?)
	Discussion and Analysis
		- Quantitative (number of lines of codes)
		- Qualitative (It's a good idea, limitations and so on)

Conclusion and Perspectivie
	- Summary (approach and results)
	- Perspectivies: Our proposal (improvements in tobias, write test cases from a single description)
	- It could be useful for product lines (automatic testing with variation)



